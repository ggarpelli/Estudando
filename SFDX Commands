Salesforce DX Developer Guide --> https://developer.salesforce.com/docs/atlas.en-us.sfdx_dev.meta/sfdx_dev/sfdx_dev_intro.htm
All commands: https://fig.io/manual/sfdx

Create a Salesforce DX Project: https://developer.salesforce.com/docs/atlas.en-us.sfdx_dev.meta/sfdx_dev/sfdx_dev_ws_create_new.htm

Authorize an org and then when you create a scratch org: https://developer.salesforce.com/docs/atlas.en-us.sfdx_dev.meta/sfdx_dev/sfdx_dev_cli_usernames_orgs.htm
sfdx force:auth:web:login --setalias DevOrg2 --instanceurl https://login.salesforce.com --setdefaultusername  --> Autenticar uma nova Org (no caso DevOrg2)
sfdx force:auth:web:login --setalias DevOrg2 --instanceurl https://test.salesforce.com --setdefaultusername
sfdx force:org:create -s -f config/project-scratch-def.json  --> Criar Scratch Org
sfdx force:org:create -f config\project-scratch-def.json --setalias DevOrgScratch --durationdays 30 --setdefaultusername --json --loglevel fatal
sfdx force:user:display -u username (to show alias, pw, username, url) --> Listar as informações do user
sfdx force:user:display  --> Listar as informações do user
sfdx force:org:list --> Listar as orgs e Scratch Orgs
sfdx force:config:set defaultusername=DevOrg
sfdx force:user:password:generate --targetusername <username> or sfdx force:user:password:generate

Para descobrir o Alias:
sfdx force:org:list --verbose

Create a manifest: https://developer.salesforce.com/docs/atlas.en-us.sfdx_cli_reference.meta/sfdx_cli_reference/cli_reference_force_source.htm#cli_reference_force_source_manifest_create
sfdx force:source:manifest:create --fromorg [your org alias] --manifestname=allMetadata --outputdir manifest --> Criar um xml com todos metadados da org.

Retrieve metadata from an org using Metadata API (Uses Metadata API to retrieve a .zip of XML): https://developer.salesforce.com/docs/atlas.en-us.242.0.sfdx_dev.meta/sfdx_dev/sfdx_dev_ws_retrieve_pack_xml.htm | https://fig.io/manual/sfdx/force:mdapi:retrieve
sfdx force:mdapi:retrieve -r ./force-app -k ./manifest/Metadata3.xml --> retrieve para pasta force-app (unpackage.zip) a partir do manifest Metadata3 (dados igual ANT, não convertido, pq está usando mdapi (metadata api)
sfdx force:mdapi:retrieve -r ./force-app -k ./manifest/package.xml

Retrieve source from an org (Source Format)
sfdx force:source:retrieve -x manifest/Metadata4.xml --> retrieve all metadata from a package (dados convertido, xml formato. Diferente do ANT, sem udar o mdapi)
sfdx force:source:retrieve -x manifest/Metadata4.xml -r path/to/unpackaged --> retrieve all metadata from a package | --r para alterar o diretorio padrão do sfdx-project.json (sfdx force:source:retrieve --help)
sfdx force:source:retrieve -x manifest/package.xml -r path/to/unpackaged

Convert source into Metadata API format: https://developer.salesforce.com/docs/atlas.en-us.sfdx_cli_reference.meta/sfdx_cli_reference/cli_reference_force_source.htm#cli_reference_force_source_convert
sfdx force:source:convert --manifest=manifest/Covid19.xml --outputdir=Covid19  (from manifest) --> Criar pasta Covid19 para receber os metadados do XML
sfdx force:source:convert --rootdir=force-app --outputdir=convert  (from XML) --> Criar pasta convert para receber os metadados covertidos da pasta force-app

Convert Metadata API format into the source format: https://developer.salesforce.com/docs/atlas.en-us.sfdx_cli_reference.meta/sfdx_cli_reference/cli_reference_force_mdapi.htm#cli_reference_force_mdapi_convert
sfdx force:mdapi:convert --rootdir=force-app --outputdir=convert  (from XML) --> Criar pasta convert para receber os metadados covertidos da pasta force-app

Deploy metadata to an org using Metadata API: https://developer.salesforce.com/docs/atlas.en-us.sfdx_dev.meta/sfdx_dev/sfdx_dev_develop_any_org.htm
sfdx force:mdapi:deploy --deploydir=Covid19 --testlevel=RunLocalTests --> Deploy de um especifico diretorio e rodar os testes locais (Apex)
sfdx force:mdapi:deploy --deploydir=DeployTest ---testlevel=RunSpecifiedTests --runtests=CommunitiesSelfRegControllerTest, osfAssetManagerPromoControllerTest, osfRecordDatatableControllerTest, osfSharepointConnectionTest --checkonly

Deploy source to an org Use this command to deploy source :https://developer.salesforce.com/docs/atlas.en-us.sfdx_cli_reference.meta/sfdx_cli_reference/cli_reference_force_source.htm#cli_reference_force_source_deploy
sfdx force:source:deploy
sfdx force:source:deploy --sourcepath=DeployProd --testlevel=RunSpecifiedTests --runtests=CommunitiesSelfRegControllerTest, osfAssetManagerPromoControllerTest, osfRecordDatatableControllerTest, osfSharepointConnectionTest --checkonly

Run Apex Tests: https://developer.salesforce.com/docs/atlas.en-us.sfdx_dev.meta/sfdx_dev/sfdx_dev_testing.htm
--testlevel:
--runtests=
sfdx force:mdapi:deploy --deploydir=DeployProd --testlevel=RunSpecifiedTests --runtests= osfAssetManagerPromoControllerTest, osfRecordDatatableControllerTest, osfSharepointConnectionTest --checkonly

Validate deploy (--checkonly)

O comando "convert" no Salesforce DX (SFDX) é usado para converter projetos de organizações tradicionais (ou seja, que usam o modelo de desenvolvimento baseado em Metadata API) para o modelo de desenvolvimento baseado em Scratch Orgs. Isso permite que os desenvolvedores trabalhem com projetos de forma mais ágil e colaborativa, utilizando recursos como Scratch Orgs e Git.
Ao usar o comando "convert", os projetos de organizações tradicionais são convertidos para um formato compatível com Scratch Orgs, incluindo arquivos de configuração e arquivos de código. Isso significa que os desenvolvedores podem usar recursos como o Fluxo de Trabalho de Desenvolvimento de Nuvem (Cloud Development Workflow) para desenvolver, testar e implementar soluções no Salesforce, usando ferramentas como o Git e o Visual Studio Code.
